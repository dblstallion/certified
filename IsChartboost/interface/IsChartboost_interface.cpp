/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "IsChartboost.h"


#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
// For MIPs (and WP8) platform we do not have asm code for stack switching
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*IsChartboostRegister_t)(IsChartboostCallback cbid, s3eCallback fn, void* userData);
typedef  s3eResult(*IsChartboostUnRegister_t)(IsChartboostCallback cbid, s3eCallback fn);
typedef       void(*IsChartboostSetAppID_t)(const char* id);
typedef       void(*IsChartboostSetAppSignature_t)(const char* signature);
typedef       void(*IsChartboostStartSession_t)();
typedef       void(*IsChartboostRequestAd_t)();
typedef       void(*IsChartboostCacheInterstitial_t)(const char* name);
typedef       void(*IsChartboostShowInterstitial_t)(const char* name);
typedef       void(*IsChartboostCacheMoreApps_t)();
typedef       void(*IsChartboostShowMoreApps_t)();

/**
 * struct that gets filled in by IsChartboostRegister
 */
typedef struct IsChartboostFuncs
{
    IsChartboostRegister_t m_IsChartboostRegister;
    IsChartboostUnRegister_t m_IsChartboostUnRegister;
    IsChartboostSetAppID_t m_IsChartboostSetAppID;
    IsChartboostSetAppSignature_t m_IsChartboostSetAppSignature;
    IsChartboostStartSession_t m_IsChartboostStartSession;
    IsChartboostRequestAd_t m_IsChartboostRequestAd;
    IsChartboostCacheInterstitial_t m_IsChartboostCacheInterstitial;
    IsChartboostShowInterstitial_t m_IsChartboostShowInterstitial;
    IsChartboostCacheMoreApps_t m_IsChartboostCacheMoreApps;
    IsChartboostShowMoreApps_t m_IsChartboostShowMoreApps;
} IsChartboostFuncs;

static IsChartboostFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x19e0ccba, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: IsChartboost");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x19e0ccba, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool IsChartboostAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult IsChartboostRegister(IsChartboostCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[0] func: IsChartboostRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_IsChartboostRegister(cbid, fn, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult IsChartboostUnRegister(IsChartboostCallback cbid, s3eCallback fn)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[1] func: IsChartboostUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_IsChartboostUnRegister(cbid, fn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void IsChartboostSetAppID(const char* id)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[2] func: IsChartboostSetAppID"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsChartboostSetAppID(id);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void IsChartboostSetAppSignature(const char* signature)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[3] func: IsChartboostSetAppSignature"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsChartboostSetAppSignature(signature);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void IsChartboostStartSession()
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[4] func: IsChartboostStartSession"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsChartboostStartSession();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void IsChartboostRequestAd()
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[5] func: IsChartboostRequestAd"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsChartboostRequestAd();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void IsChartboostCacheInterstitial(const char* name)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[6] func: IsChartboostCacheInterstitial"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsChartboostCacheInterstitial(name);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void IsChartboostShowInterstitial(const char* name)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[7] func: IsChartboostShowInterstitial"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsChartboostShowInterstitial(name);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void IsChartboostCacheMoreApps()
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[8] func: IsChartboostCacheMoreApps"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsChartboostCacheMoreApps();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void IsChartboostShowMoreApps()
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost[9] func: IsChartboostShowMoreApps"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsChartboostShowMoreApps();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}
